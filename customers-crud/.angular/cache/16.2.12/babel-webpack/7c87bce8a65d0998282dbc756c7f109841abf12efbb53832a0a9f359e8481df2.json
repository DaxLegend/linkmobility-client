{"ast":null,"code":"import { trigger, transition, style, animate } from '@angular/animations';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, forwardRef, Component, ViewEncapsulation, Inject, Input, Output, ViewChild, signal, effect, PLATFORM_ID, ChangeDetectionStrategy, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i5 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { AngleRightIcon } from 'primeng/icons/angleright';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i4 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ObjectUtils, UniqueComponentId, ZIndexUtils } from 'primeng/utils';\nconst _c0 = [\"sublist\"];\nfunction TieredMenuSub_ng_template_2_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"li\", 5);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(ctx_r4.getItemProp(processedItem_r2, \"style\"));\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.getSeparatorItemClass(processedItem_r2));\n    i0.ɵɵattribute(\"id\", ctx_r4.getItemId(processedItem_r2))(\"data-pc-section\", \"separator\");\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 18);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r13.getItemProp(processedItem_r2, \"icon\"))(\"ngStyle\", ctx_r13.getItemProp(processedItem_r2, \"iconStyle\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\")(\"aria-hidden\", true)(\"tabindex\", -1);\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.getItemLabel(processedItem_r2), \" \");\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r16.getItemLabel(processedItem_r2), i0.ɵɵsanitizeHtml);\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r17.getItemProp(processedItem_r2, \"badgeStyleClass\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r17.getItemProp(processedItem_r2, \"badge\"));\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_AngleRightIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleRightIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-submenu-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"submenuicon\")(\"aria-hidden\", true);\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_2_ng_template_0_Template(rf, ctx) {}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"data-pc-section\", \"submenuicon\")(\"aria-hidden\", true);\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_AngleRightIcon_1_Template, 1, 3, \"AngleRightIcon\", 22);\n    i0.ɵɵtemplate(2, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_2_Template, 1, 2, null, 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r18.tieredMenu.submenuIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r18.tieredMenu.submenuIconTemplate);\n  }\n}\nconst _c1 = function (a1) {\n  return {\n    \"p-menuitem-link\": true,\n    \"p-disabled\": a1\n  };\n};\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 13);\n    i0.ɵɵtemplate(1, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_span_1_Template, 1, 5, \"span\", 14);\n    i0.ɵɵtemplate(2, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_span_2_Template, 2, 2, \"span\", 15);\n    i0.ɵɵtemplate(3, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_ng_template_3_Template, 1, 2, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_span_5_Template, 2, 2, \"span\", 17);\n    i0.ɵɵtemplate(6, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r15 = i0.ɵɵreference(4);\n    const processedItem_r2 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"target\", ctx_r11.getItemProp(processedItem_r2, \"target\"))(\"ngClass\", i0.ɵɵpureFunction1(12, _c1, ctx_r11.getItemProp(processedItem_r2, \"disabled\")));\n    i0.ɵɵattribute(\"href\", ctx_r11.getItemProp(processedItem_r2, \"url\"), i0.ɵɵsanitizeUrl)(\"aria-hidden\", true)(\"data-automationid\", ctx_r11.getItemProp(processedItem_r2, \"automationId\"))(\"data-pc-section\", \"action\")(\"tabindex\", -1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.getItemProp(processedItem_r2, \"icon\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.getItemProp(processedItem_r2, \"escape\"))(\"ngIfElse\", _r15);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.getItemProp(processedItem_r2, \"badge\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.isItemGroup(processedItem_r2));\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 18);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r27.getItemProp(processedItem_r2, \"icon\"))(\"ngStyle\", ctx_r27.getItemProp(processedItem_r2, \"iconStyle\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\")(\"aria-hidden\", true)(\"tabindex\", -1);\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r28 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r28.getItemLabel(processedItem_r2), \" \");\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r30 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r30.getItemLabel(processedItem_r2), i0.ɵɵsanitizeHtml);\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r31.getItemProp(processedItem_r2, \"badgeStyleClass\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r31.getItemProp(processedItem_r2, \"badge\"));\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_AngleRightIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleRightIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-submenu-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"submenuicon\")(\"aria-hidden\", true);\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_2_ng_template_0_Template(rf, ctx) {}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"data-pc-section\", \"submenuicon\")(\"aria-hidden\", true);\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_AngleRightIcon_1_Template, 1, 3, \"AngleRightIcon\", 22);\n    i0.ɵɵtemplate(2, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_2_Template, 1, 2, null, 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r32.tieredMenu.submenuIconTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r32.tieredMenu.submenuIconTemplate);\n  }\n}\nconst _c2 = function () {\n  return {\n    exact: false\n  };\n};\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 25);\n    i0.ɵɵtemplate(1, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_span_1_Template, 1, 5, \"span\", 14);\n    i0.ɵɵtemplate(2, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_span_2_Template, 2, 2, \"span\", 15);\n    i0.ɵɵtemplate(3, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_ng_template_3_Template, 1, 2, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵtemplate(5, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_span_5_Template, 2, 2, \"span\", 17);\n    i0.ɵɵtemplate(6, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r29 = i0.ɵɵreference(4);\n    const processedItem_r2 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", ctx_r12.getItemProp(processedItem_r2, \"routerLink\"))(\"queryParams\", ctx_r12.getItemProp(processedItem_r2, \"queryParams\"))(\"routerLinkActive\", \"p-menuitem-link-active\")(\"routerLinkActiveOptions\", ctx_r12.getItemProp(processedItem_r2, \"routerLinkActiveOptions\") || i0.ɵɵpureFunction0(21, _c2))(\"target\", ctx_r12.getItemProp(processedItem_r2, \"target\"))(\"ngClass\", i0.ɵɵpureFunction1(22, _c1, ctx_r12.getItemProp(processedItem_r2, \"disabled\")))(\"fragment\", ctx_r12.getItemProp(processedItem_r2, \"fragment\"))(\"queryParamsHandling\", ctx_r12.getItemProp(processedItem_r2, \"queryParamsHandling\"))(\"preserveFragment\", ctx_r12.getItemProp(processedItem_r2, \"preserveFragment\"))(\"skipLocationChange\", ctx_r12.getItemProp(processedItem_r2, \"skipLocationChange\"))(\"replaceUrl\", ctx_r12.getItemProp(processedItem_r2, \"replaceUrl\"))(\"state\", ctx_r12.getItemProp(processedItem_r2, \"state\"));\n    i0.ɵɵattribute(\"data-automationid\", ctx_r12.getItemProp(processedItem_r2, \"automationId\"))(\"tabindex\", -1)(\"aria-hidden\", true)(\"data-pc-section\", \"action\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.getItemProp(processedItem_r2, \"icon\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.getItemProp(processedItem_r2, \"escape\"))(\"ngIfElse\", _r29);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.getItemProp(processedItem_r2, \"badge\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.isItemGroup(processedItem_r2));\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_1_Template, 7, 14, \"a\", 11);\n    i0.ɵɵtemplate(2, TieredMenuSub_ng_template_2_li_1_ng_container_3_a_2_Template, 7, 24, \"a\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.getItemProp(processedItem_r2, \"routerLink\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.getItemProp(processedItem_r2, \"routerLink\"));\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_4_1_ng_template_0_Template(rf, ctx) {}\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TieredMenuSub_ng_template_2_li_1_ng_container_4_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction TieredMenuSub_ng_template_2_li_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TieredMenuSub_ng_template_2_li_1_ng_container_4_1_Template, 1, 0, null, 26);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, processedItem_r2.item));\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_p_tieredMenuSub_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-tieredMenuSub\", 27);\n    i0.ɵɵlistener(\"itemClick\", function TieredMenuSub_ng_template_2_li_1_p_tieredMenuSub_5_Template_p_tieredMenuSub_itemClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r45 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r45.itemClick.emit($event));\n    })(\"itemMouseEnter\", function TieredMenuSub_ng_template_2_li_1_p_tieredMenuSub_5_Template_p_tieredMenuSub_itemMouseEnter_0_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r47 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r47.onItemMouseEnter($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"items\", processedItem_r2.items)(\"itemTemplate\", ctx_r10.itemTemplate)(\"autoDisplay\", ctx_r10.autoDisplay)(\"menuId\", ctx_r10.menuId)(\"activeItemPath\", ctx_r10.activeItemPath)(\"focusedItemId\", ctx_r10.focusedItemId)(\"level\", ctx_r10.level + 1);\n  }\n}\nfunction TieredMenuSub_ng_template_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6, 7)(2, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function TieredMenuSub_ng_template_2_li_1_Template_div_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const processedItem_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.onItemClick($event, processedItem_r2));\n    })(\"mouseenter\", function TieredMenuSub_ng_template_2_li_1_Template_div_mouseenter_2_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const processedItem_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r52 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r52.onItemMouseEnter({\n        $event: $event,\n        processedItem: processedItem_r2\n      }));\n    });\n    i0.ɵɵtemplate(3, TieredMenuSub_ng_template_2_li_1_ng_container_3_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵtemplate(4, TieredMenuSub_ng_template_2_li_1_ng_container_4_Template, 2, 4, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, TieredMenuSub_ng_template_2_li_1_p_tieredMenuSub_5_Template, 1, 7, \"p-tieredMenuSub\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r54 = i0.ɵɵnextContext();\n    const processedItem_r2 = ctx_r54.$implicit;\n    const index_r3 = ctx_r54.index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r5.getItemProp(processedItem_r2, \"styleClass\"));\n    i0.ɵɵproperty(\"ngStyle\", ctx_r5.getItemProp(processedItem_r2, \"style\"))(\"ngClass\", ctx_r5.getItemClass(processedItem_r2))(\"tooltipOptions\", ctx_r5.getItemProp(processedItem_r2, \"tooltipOptions\"));\n    i0.ɵɵattribute(\"id\", ctx_r5.getItemId(processedItem_r2))(\"data-pc-section\", \"menuitem\")(\"data-p-highlight\", ctx_r5.isItemActive(processedItem_r2))(\"data-p-focused\", ctx_r5.isItemFocused(processedItem_r2))(\"data-p-disabled\", ctx_r5.isItemDisabled(processedItem_r2))(\"aria-label\", ctx_r5.getItemLabel(processedItem_r2))(\"aria-disabled\", ctx_r5.isItemDisabled(processedItem_r2) || undefined)(\"aria-haspopup\", ctx_r5.isItemGroup(processedItem_r2) && !ctx_r5.getItemProp(processedItem_r2, \"to\") ? \"menu\" : undefined)(\"aria-expanded\", ctx_r5.isItemGroup(processedItem_r2) ? ctx_r5.isItemActive(processedItem_r2) : undefined)(\"aria-level\", ctx_r5.level + 1)(\"aria-setsize\", ctx_r5.getAriaSetSize())(\"aria-posinset\", ctx_r5.getAriaPosInset(index_r3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"content\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.itemTemplate);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isItemVisible(processedItem_r2) && ctx_r5.isItemGroup(processedItem_r2));\n  }\n}\nfunction TieredMenuSub_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TieredMenuSub_ng_template_2_li_0_Template, 1, 5, \"li\", 3);\n    i0.ɵɵtemplate(1, TieredMenuSub_ng_template_2_li_1_Template, 6, 21, \"li\", 4);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isItemVisible(processedItem_r2) && ctx_r1.getItemProp(processedItem_r2, \"separator\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isItemVisible(processedItem_r2) && !ctx_r1.getItemProp(processedItem_r2, \"separator\"));\n  }\n}\nconst _c4 = function (a0, a1) {\n  return {\n    \"p-submenu-list\": a0,\n    \"p-tieredmenu-root-list\": a1\n  };\n};\nconst _c5 = [\"rootmenu\"];\nconst _c6 = [\"container\"];\nconst _c7 = function (a1) {\n  return {\n    \"p-tieredmenu p-component\": true,\n    \"p-tieredmenu-overlay\": a1\n  };\n};\nconst _c8 = function (a0, a1) {\n  return {\n    showTransitionParams: a0,\n    hideTransitionParams: a1\n  };\n};\nconst _c9 = function (a1) {\n  return {\n    value: \"visible\",\n    params: a1\n  };\n};\nfunction TieredMenu_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1, 2);\n    i0.ɵɵlistener(\"click\", function TieredMenu_div_0_Template_div_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onOverlayClick($event));\n    })(\"@overlayAnimation.start\", function TieredMenu_div_0_Template_div_animation_overlayAnimation_start_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onOverlayAnimationStart($event));\n    })(\"@overlayAnimation.done\", function TieredMenu_div_0_Template_div_animation_overlayAnimation_done_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onOverlayAnimationEnd($event));\n    });\n    i0.ɵɵelementStart(2, \"p-tieredMenuSub\", 3, 4);\n    i0.ɵɵlistener(\"itemClick\", function TieredMenu_div_0_Template_p_tieredMenuSub_itemClick_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.onItemClick($event));\n    })(\"menuFocus\", function TieredMenu_div_0_Template_p_tieredMenuSub_menuFocus_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onMenuFocus($event));\n    })(\"menuBlur\", function TieredMenu_div_0_Template_p_tieredMenuSub_menuBlur_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onMenuBlur($event));\n    })(\"menuKeydown\", function TieredMenu_div_0_Template_p_tieredMenuSub_menuKeydown_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onKeyDown($event));\n    })(\"itemMouseEnter\", function TieredMenu_div_0_Template_p_tieredMenuSub_itemMouseEnter_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.onItemMouseEnter($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r0.styleClass);\n    i0.ɵɵproperty(\"id\", ctx_r0.id)(\"ngClass\", i0.ɵɵpureFunction1(22, _c7, ctx_r0.popup))(\"ngStyle\", ctx_r0.style)(\"@overlayAnimation\", i0.ɵɵpureFunction1(27, _c9, i0.ɵɵpureFunction2(24, _c8, ctx_r0.showTransitionOptions, ctx_r0.hideTransitionOptions)))(\"@.disabled\", ctx_r0.popup !== true);\n    i0.ɵɵattribute(\"data-pc-section\", \"root\")(\"data-pc-name\", \"tieredmenu\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"root\", true)(\"items\", ctx_r0.processedItems)(\"itemTemplate\", ctx_r0.itemTemplate)(\"menuId\", ctx_r0.id)(\"tabindex\", !ctx_r0.disabled ? ctx_r0.tabindex : -1)(\"ariaLabel\", ctx_r0.ariaLabel)(\"ariaLabelledBy\", ctx_r0.ariaLabelledBy)(\"baseZIndex\", ctx_r0.baseZIndex)(\"autoZIndex\", ctx_r0.autoZIndex)(\"autoDisplay\", ctx_r0.autoDisplay)(\"popup\", ctx_r0.popup)(\"focusedItemId\", ctx_r0.focused ? ctx_r0.focusedItemId : undefined)(\"activeItemPath\", ctx_r0.activeItemPath());\n  }\n}\nlet TieredMenuSub = /*#__PURE__*/(() => {\n  class TieredMenuSub {\n    el;\n    renderer;\n    cd;\n    tieredMenu;\n    items;\n    itemTemplate;\n    root = false;\n    autoDisplay;\n    autoZIndex = true;\n    baseZIndex = 0;\n    popup;\n    menuId;\n    ariaLabel;\n    ariaLabelledBy;\n    level = 0;\n    focusedItemId;\n    activeItemPath;\n    tabindex = 0;\n    itemClick = new EventEmitter();\n    itemMouseEnter = new EventEmitter();\n    menuFocus = new EventEmitter();\n    menuBlur = new EventEmitter();\n    menuKeydown = new EventEmitter();\n    sublistViewChild;\n    constructor(el, renderer, cd, tieredMenu) {\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.tieredMenu = tieredMenu;\n    }\n    positionSubmenu() {\n      let sublist = this.sublistViewChild && this.sublistViewChild.nativeElement;\n      if (sublist) {\n        const parentItem = sublist.parentElement.parentElement;\n        const containerOffset = DomHandler.getOffset(parentItem);\n        const viewport = DomHandler.getViewport();\n        const sublistWidth = sublist.offsetParent ? sublist.offsetWidth : DomHandler.getHiddenElementOuterWidth(sublist);\n        const itemOuterWidth = DomHandler.getOuterWidth(parentItem.children[0]);\n        if (parseInt(containerOffset.left, 10) + itemOuterWidth + sublistWidth > viewport.width - DomHandler.calculateScrollbarWidth()) {\n          DomHandler.addClass(sublist, 'p-submenu-list-flipped');\n        }\n      }\n    }\n    getItemProp(processedItem, name, params = null) {\n      return processedItem && processedItem.item ? ObjectUtils.getItemValue(processedItem.item[name], params) : undefined;\n    }\n    getItemId(processedItem) {\n      return processedItem.item?.id ?? `${this.menuId}_${processedItem.key}`;\n    }\n    getItemKey(processedItem) {\n      return this.getItemId(processedItem);\n    }\n    getItemClass(processedItem) {\n      return {\n        ...this.getItemProp(processedItem, 'class'),\n        'p-menuitem': true,\n        'p-highlight': this.isItemActive(processedItem),\n        'p-menuitem-active': this.isItemActive(processedItem),\n        'p-focus': this.isItemFocused(processedItem),\n        'p-disabled': this.isItemDisabled(processedItem)\n      };\n    }\n    getItemLabel(processedItem) {\n      return this.getItemProp(processedItem, 'label');\n    }\n    getSeparatorItemClass(processedItem) {\n      return {\n        ...this.getItemProp(processedItem, 'class'),\n        'p-menuitem-separator': true\n      };\n    }\n    getAriaSetSize() {\n      return this.items.filter(processedItem => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n    }\n    getAriaPosInset(index) {\n      return index - this.items.slice(0, index).filter(processedItem => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n    }\n    isItemVisible(processedItem) {\n      return this.getItemProp(processedItem, 'visible') !== false;\n    }\n    isItemActive(processedItem) {\n      if (this.activeItemPath) {\n        return this.activeItemPath.some(path => path.key === processedItem.key);\n      }\n    }\n    isItemDisabled(processedItem) {\n      return this.getItemProp(processedItem, 'disabled');\n    }\n    isItemFocused(processedItem) {\n      return this.focusedItemId === this.getItemId(processedItem);\n    }\n    isItemGroup(processedItem) {\n      return ObjectUtils.isNotEmpty(processedItem.items);\n    }\n    onItemMouseEnter(param) {\n      if (this.autoDisplay) {\n        const {\n          event,\n          processedItem\n        } = param;\n        this.itemMouseEnter.emit({\n          originalEvent: event,\n          processedItem\n        });\n      }\n    }\n    onItemClick(event, processedItem) {\n      this.getItemProp(processedItem, 'command', {\n        originalEvent: event,\n        item: processedItem.item\n      });\n      this.itemClick.emit({\n        originalEvent: event,\n        processedItem,\n        isFocus: true\n      });\n    }\n    static ɵfac = function TieredMenuSub_Factory(t) {\n      return new (t || TieredMenuSub)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(forwardRef(() => TieredMenu)));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TieredMenuSub,\n      selectors: [[\"p-tieredMenuSub\"]],\n      viewQuery: function TieredMenuSub_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sublistViewChild = _t.first);\n        }\n      },\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        items: \"items\",\n        itemTemplate: \"itemTemplate\",\n        root: \"root\",\n        autoDisplay: \"autoDisplay\",\n        autoZIndex: \"autoZIndex\",\n        baseZIndex: \"baseZIndex\",\n        popup: \"popup\",\n        menuId: \"menuId\",\n        ariaLabel: \"ariaLabel\",\n        ariaLabelledBy: \"ariaLabelledBy\",\n        level: \"level\",\n        focusedItemId: \"focusedItemId\",\n        activeItemPath: \"activeItemPath\",\n        tabindex: \"tabindex\"\n      },\n      outputs: {\n        itemClick: \"itemClick\",\n        itemMouseEnter: \"itemMouseEnter\",\n        menuFocus: \"menuFocus\",\n        menuBlur: \"menuBlur\",\n        menuKeydown: \"menuKeydown\"\n      },\n      decls: 3,\n      vars: 12,\n      consts: [[\"role\", \"menu\", 3, \"ngClass\", \"id\", \"tabindex\", \"keydown\", \"focus\", \"blur\"], [\"sublist\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"separator\", 3, \"style\", \"ngClass\", 4, \"ngIf\"], [\"role\", \"menuitem\", \"pTooltip\", \"\", 3, \"ngStyle\", \"ngClass\", \"class\", \"tooltipOptions\", 4, \"ngIf\"], [\"role\", \"separator\", 3, \"ngClass\"], [\"role\", \"menuitem\", \"pTooltip\", \"\", 3, \"ngStyle\", \"ngClass\", \"tooltipOptions\"], [\"listItem\", \"\"], [1, \"p-menuitem-content\", 3, \"click\", \"mouseenter\"], [4, \"ngIf\"], [3, \"items\", \"itemTemplate\", \"autoDisplay\", \"menuId\", \"activeItemPath\", \"focusedItemId\", \"level\", \"itemClick\", \"itemMouseEnter\", 4, \"ngIf\"], [\"pRipple\", \"\", 3, \"target\", \"ngClass\", 4, \"ngIf\"], [\"pRipple\", \"\", 3, \"routerLink\", \"queryParams\", \"routerLinkActive\", \"routerLinkActiveOptions\", \"target\", \"ngClass\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", 4, \"ngIf\"], [\"pRipple\", \"\", 3, \"target\", \"ngClass\"], [\"class\", \"p-menuitem-icon\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"class\", \"p-menuitem-text\", 4, \"ngIf\", \"ngIfElse\"], [\"htmlLabel\", \"\"], [\"class\", \"p-menuitem-badge\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-menuitem-icon\", 3, \"ngClass\", \"ngStyle\"], [1, \"p-menuitem-text\"], [1, \"p-menuitem-text\", 3, \"innerHTML\"], [1, \"p-menuitem-badge\", 3, \"ngClass\"], [3, \"styleClass\", 4, \"ngIf\"], [4, \"ngTemplateOutlet\"], [3, \"styleClass\"], [\"pRipple\", \"\", 3, \"routerLink\", \"queryParams\", \"routerLinkActive\", \"routerLinkActiveOptions\", \"target\", \"ngClass\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"items\", \"itemTemplate\", \"autoDisplay\", \"menuId\", \"activeItemPath\", \"focusedItemId\", \"level\", \"itemClick\", \"itemMouseEnter\"]],\n      template: function TieredMenuSub_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ul\", 0, 1);\n          i0.ɵɵlistener(\"keydown\", function TieredMenuSub_Template_ul_keydown_0_listener($event) {\n            return ctx.menuKeydown.emit($event);\n          })(\"focus\", function TieredMenuSub_Template_ul_focus_0_listener($event) {\n            return ctx.menuFocus.emit($event);\n          })(\"blur\", function TieredMenuSub_Template_ul_blur_0_listener($event) {\n            return ctx.menuBlur.emit($event);\n          });\n          i0.ɵɵtemplate(2, TieredMenuSub_ng_template_2_Template, 2, 2, \"ng-template\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(9, _c4, !ctx.root, ctx.root))(\"id\", ctx.menuId + \"_list\")(\"tabindex\", ctx.tabindex);\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-labelledBy\", ctx.ariaLabelledBy)(\"aria-activedescendant\", ctx.focusedItemId)(\"aria-orientation\", \"vertical\")(\"data-pc-section\", \"menu\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: function () {\n        return [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.RouterLink, i2.RouterLinkActive, i3.Ripple, i4.Tooltip, AngleRightIcon, TieredMenuSub];\n      },\n      encapsulation: 2\n    });\n  }\n  return TieredMenuSub;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * TieredMenu displays submenus in nested overlays.\n * @group Components\n */\nlet TieredMenu = /*#__PURE__*/(() => {\n  class TieredMenu {\n    document;\n    platformId;\n    el;\n    renderer;\n    cd;\n    config;\n    overlayService;\n    /**\n     * An array of menuitems.\n     * @group Props\n     */\n    set model(value) {\n      this._model = value;\n      this._processedItems = this.createProcessedItems(this._model || []);\n    }\n    get model() {\n      return this._model;\n    }\n    /**\n     * Defines if menu would displayed as a popup.\n     * @group Props\n     */\n    popup;\n    /**\n     * Inline style of the component.\n     * @group Props\n     */\n    style;\n    /**\n     * Style class of the component.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Target element to attach the overlay, valid values are \"body\" or a local ng-template variable of another element.\n     * @group Props\n     */\n    appendTo;\n    /**\n     * Whether to automatically manage layering.\n     * @group Props\n     */\n    autoZIndex = true;\n    /**\n     * Base zIndex value to use in layering.\n     * @group Props\n     */\n    baseZIndex = 0;\n    /**\n     * Whether to show a root submenu on mouse over.\n     * @defaultValue true\n     * @group Props\n     */\n    autoDisplay = true;\n    /**\n     * Transition options of the show animation.\n     * @group Props\n     */\n    showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n    /**\n     * Transition options of the hide animation.\n     * @group Props\n     */\n    hideTransitionOptions = '.1s linear';\n    /**\n     * Current id state as a string.\n     * @group Props\n     */\n    id;\n    /**\n     * Defines a string value that labels an interactive element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Identifier of the underlying input element.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    disabled = false;\n    /**\n     * Index of the element in tabbing order.\n     * @group Props\n     */\n    tabindex = 0;\n    /**\n     * Callback to invoke when overlay menu is shown.\n     * @group Emits\n     */\n    onShow = new EventEmitter();\n    /**\n     * Callback to invoke when overlay menu is hidden.\n     * @group Emits\n     */\n    onHide = new EventEmitter();\n    templates;\n    rootmenu;\n    containerViewChild;\n    submenuIconTemplate;\n    itemTemplate;\n    container;\n    outsideClickListener;\n    resizeListener;\n    scrollHandler;\n    target;\n    relatedTarget;\n    visible;\n    relativeAlign;\n    window;\n    dirty = false;\n    focused = false;\n    activeItemPath = signal([]);\n    number = signal(0);\n    focusedItemInfo = signal({\n      index: -1,\n      level: 0,\n      parentKey: '',\n      item: null\n    });\n    searchValue = '';\n    searchTimeout;\n    _processedItems;\n    _model;\n    get visibleItems() {\n      const processedItem = this.activeItemPath().find(p => p.key === this.focusedItemInfo().parentKey);\n      return processedItem ? processedItem.items : this.processedItems;\n    }\n    get processedItems() {\n      if (!this._processedItems || !this._processedItems.length) {\n        this._processedItems = this.createProcessedItems(this.model || []);\n      }\n      return this._processedItems;\n    }\n    get focusedItemId() {\n      const focusedItemInfo = this.focusedItemInfo();\n      return focusedItemInfo.item?.id ? focusedItemInfo.item.id : focusedItemInfo.index !== -1 ? `${this.id}${ObjectUtils.isNotEmpty(focusedItemInfo.parentKey) ? '_' + focusedItemInfo.parentKey : ''}_${focusedItemInfo.index}` : null;\n    }\n    constructor(document, platformId, el, renderer, cd, config, overlayService) {\n      this.document = document;\n      this.platformId = platformId;\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.config = config;\n      this.overlayService = overlayService;\n      this.window = this.document.defaultView;\n      effect(() => {\n        const path = this.activeItemPath();\n        if (ObjectUtils.isNotEmpty(path)) {\n          this.bindOutsideClickListener();\n          this.bindResizeListener();\n        } else {\n          this.unbindOutsideClickListener();\n          this.unbindResizeListener();\n        }\n      });\n    }\n    ngOnInit() {\n      this.id = this.id || UniqueComponentId();\n    }\n    ngAfterContentInit() {\n      this.templates?.forEach(item => {\n        switch (item.getType()) {\n          case 'submenuicon':\n            this.submenuIconTemplate = item.template;\n            break;\n          case 'item':\n            this.itemTemplate = item.template;\n            break;\n          default:\n            this.itemTemplate = item.template;\n            break;\n        }\n      });\n    }\n    createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n      const processedItems = [];\n      items && items.forEach((item, index) => {\n        const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n        const newItem = {\n          item,\n          index,\n          level,\n          key,\n          parent,\n          parentKey\n        };\n        newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n        processedItems.push(newItem);\n      });\n      return processedItems;\n    }\n    getItemProp(item, name) {\n      return item ? ObjectUtils.getItemValue(item[name]) : undefined;\n    }\n    getProccessedItemLabel(processedItem) {\n      return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n    }\n    getItemLabel(item) {\n      return this.getItemProp(item, 'label');\n    }\n    isProcessedItemGroup(processedItem) {\n      return processedItem && ObjectUtils.isNotEmpty(processedItem.items);\n    }\n    isSelected(processedItem) {\n      return this.activeItemPath().some(p => p.key === processedItem.key);\n    }\n    isValidSelectedItem(processedItem) {\n      return this.isValidItem(processedItem) && this.isSelected(processedItem);\n    }\n    isValidItem(processedItem) {\n      return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item);\n    }\n    isItemDisabled(item) {\n      return this.getItemProp(item, 'disabled');\n    }\n    isItemSeparator(item) {\n      return this.getItemProp(item, 'separator');\n    }\n    isItemMatched(processedItem) {\n      return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem).toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n    }\n    isProccessedItemGroup(processedItem) {\n      return processedItem && ObjectUtils.isNotEmpty(processedItem.items);\n    }\n    onOverlayClick(event) {\n      if (this.popup) {\n        this.overlayService.add({\n          originalEvent: event,\n          target: this.el.nativeElement\n        });\n      }\n    }\n    onItemClick(event) {\n      const {\n        originalEvent,\n        processedItem\n      } = event;\n      const grouped = this.isProcessedItemGroup(processedItem);\n      const root = ObjectUtils.isEmpty(processedItem.parent);\n      const selected = this.isSelected(processedItem);\n      if (selected) {\n        const {\n          index,\n          key,\n          level,\n          parentKey,\n          item\n        } = processedItem;\n        this.activeItemPath.set(this.activeItemPath().filter(p => key !== p.key && key.startsWith(p.key)));\n        this.focusedItemInfo.set({\n          index,\n          level,\n          parentKey,\n          item\n        });\n        this.dirty = true;\n        DomHandler.focus(this.rootmenu.sublistViewChild.nativeElement);\n      } else {\n        if (grouped) {\n          this.onItemChange(event);\n        } else {\n          const rootProcessedItem = root ? processedItem : this.activeItemPath().find(p => p.parentKey === '');\n          this.hide(originalEvent);\n          this.changeFocusedItemIndex(originalEvent, rootProcessedItem ? rootProcessedItem.index : -1);\n          DomHandler.focus(this.rootmenu.sublistViewChild.nativeElement);\n        }\n      }\n    }\n    onItemMouseEnter(event) {\n      if (!DomHandler.isTouchDevice()) {\n        if (this.dirty) {\n          this.onItemChange(event);\n        }\n      } else {\n        this.onItemChange({\n          event,\n          processedItem: event.processedItem,\n          focus: this.autoDisplay\n        });\n      }\n    }\n    onKeyDown(event) {\n      const metaKey = event.metaKey || event.ctrlKey;\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onArrowDownKey(event);\n          break;\n        case 'ArrowUp':\n          this.onArrowUpKey(event);\n          break;\n        case 'ArrowLeft':\n          this.onArrowLeftKey(event);\n          break;\n        case 'ArrowRight':\n          this.onArrowRightKey(event);\n          break;\n        case 'Home':\n          this.onHomeKey(event);\n          break;\n        case 'End':\n          this.onEndKey(event);\n          break;\n        case 'Space':\n          this.onSpaceKey(event);\n          break;\n        case 'Enter':\n          this.onEnterKey(event);\n          break;\n        case 'Escape':\n          this.onEscapeKey(event);\n          break;\n        case 'Tab':\n          this.onTabKey(event);\n          break;\n        case 'PageDown':\n        case 'PageUp':\n        case 'Backspace':\n        case 'ShiftLeft':\n        case 'ShiftRight':\n          //NOOP\n          break;\n        default:\n          if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n            this.searchItems(event, event.key);\n          }\n          break;\n      }\n    }\n    onArrowDownKey(event) {\n      const itemIndex = this.focusedItemInfo().index !== -1 ? this.findNextItemIndex(this.focusedItemInfo().index) : this.findFirstFocusedItemIndex();\n      this.changeFocusedItemIndex(event, itemIndex);\n      event.preventDefault();\n    }\n    onArrowRightKey(event) {\n      const processedItem = this.visibleItems[this.focusedItemInfo().index];\n      const grouped = this.isProccessedItemGroup(processedItem);\n      const item = processedItem.item;\n      if (grouped) {\n        this.onItemChange({\n          originalEvent: event,\n          processedItem\n        });\n        this.focusedItemInfo.set({\n          index: -1,\n          parentKey: processedItem.key,\n          item\n        });\n        this.searchValue = '';\n        this.onArrowDownKey(event);\n      }\n      event.preventDefault();\n    }\n    onArrowUpKey(event) {\n      if (event.altKey) {\n        if (this.focusedItemInfo().index !== -1) {\n          const processedItem = this.visibleItems[this.focusedItemInfo().index];\n          const grouped = this.isProccessedItemGroup(processedItem);\n          !grouped && this.onItemChange({\n            originalEvent: event,\n            processedItem\n          });\n        }\n        this.popup && this.hide(event, true);\n        event.preventDefault();\n      } else {\n        const itemIndex = this.focusedItemInfo().index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo().index) : this.findLastFocusedItemIndex();\n        this.changeFocusedItemIndex(event, itemIndex);\n        event.preventDefault();\n      }\n    }\n    onArrowLeftKey(event) {\n      const processedItem = this.visibleItems[this.focusedItemInfo().index];\n      const parentItem = this.activeItemPath().find(p => p.key === processedItem.parentKey);\n      const root = ObjectUtils.isEmpty(processedItem.parent);\n      if (!root) {\n        this.focusedItemInfo.set({\n          index: -1,\n          parentKey: parentItem ? parentItem.parentKey : '',\n          item: processedItem.item\n        });\n        this.searchValue = '';\n        this.onArrowDownKey(event);\n      }\n      const activeItemPath = this.activeItemPath().filter(p => p.parentKey !== this.focusedItemInfo().parentKey);\n      this.activeItemPath.set(activeItemPath);\n      event.preventDefault();\n    }\n    onHomeKey(event) {\n      this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n      event.preventDefault();\n    }\n    onEndKey(event) {\n      this.changeFocusedItemIndex(event, this.findLastItemIndex());\n      event.preventDefault();\n    }\n    onSpaceKey(event) {\n      this.onEnterKey(event);\n    }\n    onEscapeKey(event) {\n      this.hide(event, true);\n      this.focusedItemInfo().index = this.findFirstFocusedItemIndex();\n      event.preventDefault();\n    }\n    onTabKey(event) {\n      if (this.focusedItemInfo().index !== -1) {\n        const processedItem = this.visibleItems[this.focusedItemInfo().index];\n        const grouped = this.isProccessedItemGroup(processedItem);\n        !grouped && this.onItemChange({\n          originalEvent: event,\n          processedItem\n        });\n      }\n      this.hide();\n    }\n    onEnterKey(event) {\n      if (this.focusedItemInfo().index !== -1) {\n        const element = DomHandler.findSingle(this.rootmenu.el.nativeElement, `li[id=\"${`${this.focusedItemId}`}\"]`);\n        const anchorElement = element && DomHandler.findSingle(element, 'a[data-pc-section=\"action\"]');\n        anchorElement ? anchorElement.click() : element && element.click();\n        const processedItem = this.visibleItems[this.focusedItemInfo().index];\n        if (!this.popup) {\n          const processedItem = this.visibleItems[this.focusedItemInfo().index];\n          const grouped = this.isProccessedItemGroup(processedItem);\n          !grouped && (this.focusedItemInfo().index = this.findFirstFocusedItemIndex());\n        }\n      }\n      event.preventDefault();\n    }\n    onItemChange(event) {\n      const {\n        processedItem,\n        isFocus\n      } = event;\n      if (ObjectUtils.isEmpty(processedItem)) return;\n      const {\n        index,\n        key,\n        level,\n        parentKey,\n        items,\n        item\n      } = processedItem;\n      const grouped = ObjectUtils.isNotEmpty(items);\n      const activeItemPath = this.activeItemPath().filter(p => p.parentKey !== parentKey && p.parentKey !== key);\n      grouped && activeItemPath.push(processedItem);\n      this.focusedItemInfo.set({\n        index,\n        level,\n        parentKey,\n        item\n      });\n      this.activeItemPath.set(activeItemPath);\n      grouped && (this.dirty = true);\n      isFocus && DomHandler.focus(this.rootmenu.sublistViewChild.nativeElement);\n    }\n    onMenuFocus(event) {\n      this.focused = true;\n      const focusedItemInfo = this.focusedItemInfo().index !== -1 ? this.focusedItemInfo() : {\n        index: this.findFirstFocusedItemIndex(),\n        level: 0,\n        parentKey: '',\n        item: this.visibleItems[this.findFirstFocusedItemIndex()]?.item\n      };\n      this.focusedItemInfo.set(focusedItemInfo);\n    }\n    onMenuBlur(event) {\n      this.focused = false;\n      this.focusedItemInfo.set({\n        index: -1,\n        level: 0,\n        parentKey: '',\n        item: null\n      });\n      this.searchValue = '';\n      this.dirty = false;\n    }\n    onOverlayAnimationStart(event) {\n      switch (event.toState) {\n        case 'visible':\n          if (this.popup) {\n            this.container = event.element;\n            this.moveOnTop();\n            this.onShow.emit({});\n            this.appendOverlay();\n            this.alignOverlay();\n            this.bindOutsideClickListener();\n            this.bindResizeListener();\n            this.bindScrollListener();\n            DomHandler.focus(this.rootmenu.sublistViewChild.nativeElement);\n            this.scrollInView();\n          }\n          break;\n        case 'void':\n          this.onOverlayHide();\n          this.onHide.emit({});\n          break;\n      }\n    }\n    alignOverlay() {\n      if (this.relativeAlign) DomHandler.relativePosition(this.container, this.target);else DomHandler.absolutePosition(this.container, this.target);\n    }\n    onOverlayAnimationEnd(event) {\n      switch (event.toState) {\n        case 'void':\n          ZIndexUtils.clear(event.element);\n          break;\n      }\n    }\n    appendOverlay() {\n      if (this.appendTo) {\n        if (this.appendTo === 'body') this.renderer.appendChild(this.document.body, this.container);else DomHandler.appendChild(this.container, this.appendTo);\n      }\n    }\n    restoreOverlayAppend() {\n      if (this.container && this.appendTo) {\n        this.renderer.appendChild(this.el.nativeElement, this.container);\n      }\n    }\n    moveOnTop() {\n      if (this.autoZIndex) {\n        ZIndexUtils.set('menu', this.container, this.baseZIndex + this.config.zIndex.menu);\n      }\n    }\n    /**\n     * Hides the popup menu.\n     * @group Method\n     */\n    hide(event, isFocus) {\n      if (this.popup) {\n        this.onHide.emit({});\n        this.visible = false;\n      }\n      this.activeItemPath.set([]);\n      this.focusedItemInfo.set({\n        index: -1,\n        level: 0,\n        parentKey: ''\n      });\n      isFocus && DomHandler.focus(this.relatedTarget || this.target || this.rootmenu.sublistViewChild.nativeElement);\n      this.dirty = false;\n    }\n    /**\n     * Toggles the visibility of the popup menu.\n     * @param {Event} event - Browser event.\n     * @group Method\n     */\n    toggle(event) {\n      this.visible ? this.hide(event, true) : this.show(event);\n    }\n    /**\n     * Displays the popup menu.\n     * @param {Event} even - Browser event.\n     * @group Method\n     */\n    show(event, isFocus) {\n      if (this.popup) {\n        this.visible = true;\n        this.target = this.target || event.currentTarget;\n        this.relatedTarget = event.relatedTarget || null;\n        this.relativeAlign = event?.relativeAlign || null;\n      }\n      this.focusedItemInfo.set({\n        index: this.findFirstFocusedItemIndex(),\n        level: 0,\n        parentKey: ''\n      });\n      isFocus && DomHandler.focus(this.rootmenu.sublistViewChild.nativeElement);\n      this.cd.markForCheck();\n    }\n    searchItems(event, char) {\n      this.searchValue = (this.searchValue || '') + char;\n      let itemIndex = -1;\n      let matched = false;\n      if (this.focusedItemInfo().index !== -1) {\n        itemIndex = this.visibleItems.slice(this.focusedItemInfo().index).findIndex(processedItem => this.isItemMatched(processedItem));\n        itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo().index).findIndex(processedItem => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo().index;\n      } else {\n        itemIndex = this.visibleItems.findIndex(processedItem => this.isItemMatched(processedItem));\n      }\n      if (itemIndex !== -1) {\n        matched = true;\n      }\n      if (itemIndex === -1 && this.focusedItemInfo().index === -1) {\n        itemIndex = this.findFirstFocusedItemIndex();\n      }\n      if (itemIndex !== -1) {\n        this.changeFocusedItemIndex(event, itemIndex);\n      }\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n      this.searchTimeout = setTimeout(() => {\n        this.searchValue = '';\n        this.searchTimeout = null;\n      }, 500);\n      return matched;\n    }\n    findLastFocusedItemIndex() {\n      const selectedIndex = this.findSelectedItemIndex();\n      return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n    }\n    findLastItemIndex() {\n      return ObjectUtils.findLastIndex(this.visibleItems, processedItem => this.isValidItem(processedItem));\n    }\n    findPrevItemIndex(index) {\n      const matchedItemIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleItems.slice(0, index), processedItem => this.isValidItem(processedItem)) : -1;\n      return matchedItemIndex > -1 ? matchedItemIndex : index;\n    }\n    findNextItemIndex(index) {\n      const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex(processedItem => this.isValidItem(processedItem)) : -1;\n      return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n    }\n    findFirstFocusedItemIndex() {\n      const selectedIndex = this.findSelectedItemIndex();\n      return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n    }\n    findFirstItemIndex() {\n      return this.visibleItems.findIndex(processedItem => this.isValidItem(processedItem));\n    }\n    findSelectedItemIndex() {\n      return this.visibleItems.findIndex(processedItem => this.isValidSelectedItem(processedItem));\n    }\n    changeFocusedItemIndex(event, index) {\n      if (this.focusedItemInfo().index !== index) {\n        this.focusedItemInfo.mutate(value => {\n          value.index = index;\n          value.item = this.visibleItems[index].item;\n        });\n        this.scrollInView();\n      }\n    }\n    scrollInView(index = -1) {\n      const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemId;\n      const element = DomHandler.findSingle(this.rootmenu.el.nativeElement, `li[id=\"${id}\"]`);\n      if (element) {\n        element.scrollIntoView && element.scrollIntoView({\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      }\n    }\n    bindScrollListener() {\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.target, event => {\n          if (this.visible) {\n            this.hide(event, true);\n          }\n        });\n      }\n      this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n        this.scrollHandler = null;\n      }\n    }\n    bindResizeListener() {\n      if (isPlatformBrowser(this.platformId)) {\n        if (!this.resizeListener) {\n          this.resizeListener = this.renderer.listen(this.document.defaultView, 'resize', event => {\n            if (!DomHandler.isTouchDevice()) {\n              this.hide(event, true);\n            }\n          });\n        }\n      }\n    }\n    bindOutsideClickListener() {\n      if (isPlatformBrowser(this.platformId)) {\n        if (!this.outsideClickListener) {\n          this.outsideClickListener = this.renderer.listen(this.document, 'click', event => {\n            const isOutsideContainer = this.containerViewChild && !this.containerViewChild.nativeElement.contains(event.target);\n            const isOutsideTarget = this.popup ? !(this.target && (this.target === event.target || this.target.contains(event.target))) : true;\n            if (isOutsideContainer && isOutsideTarget) {\n              this.hide();\n            }\n          });\n        }\n      }\n    }\n    unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        document.removeEventListener('click', this.outsideClickListener);\n        this.outsideClickListener = null;\n      }\n    }\n    unbindResizeListener() {\n      if (this.resizeListener) {\n        this.resizeListener();\n        this.resizeListener = null;\n      }\n    }\n    onOverlayHide() {\n      this.unbindOutsideClickListener();\n      this.unbindResizeListener();\n      this.unbindScrollListener();\n      if (!this.cd.destroyed) {\n        this.target = null;\n      }\n    }\n    ngOnDestroy() {\n      if (this.popup) {\n        if (this.scrollHandler) {\n          this.scrollHandler.destroy();\n          this.scrollHandler = null;\n        }\n        if (this.container && this.autoZIndex) {\n          ZIndexUtils.clear(this.container);\n        }\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n      }\n    }\n    static ɵfac = function TieredMenu_Factory(t) {\n      return new (t || TieredMenu)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i5.PrimeNGConfig), i0.ɵɵdirectiveInject(i5.OverlayService));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: TieredMenu,\n      selectors: [[\"p-tieredMenu\"]],\n      contentQueries: function TieredMenu_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      viewQuery: function TieredMenu_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c5, 5);\n          i0.ɵɵviewQuery(_c6, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rootmenu = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.containerViewChild = _t.first);\n        }\n      },\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        model: \"model\",\n        popup: \"popup\",\n        style: \"style\",\n        styleClass: \"styleClass\",\n        appendTo: \"appendTo\",\n        autoZIndex: \"autoZIndex\",\n        baseZIndex: \"baseZIndex\",\n        autoDisplay: \"autoDisplay\",\n        showTransitionOptions: \"showTransitionOptions\",\n        hideTransitionOptions: \"hideTransitionOptions\",\n        id: \"id\",\n        ariaLabel: \"ariaLabel\",\n        ariaLabelledBy: \"ariaLabelledBy\",\n        disabled: \"disabled\",\n        tabindex: \"tabindex\"\n      },\n      outputs: {\n        onShow: \"onShow\",\n        onHide: \"onHide\"\n      },\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"id\", \"ngClass\", \"class\", \"ngStyle\", \"click\", 4, \"ngIf\"], [3, \"id\", \"ngClass\", \"ngStyle\", \"click\"], [\"container\", \"\"], [3, \"root\", \"items\", \"itemTemplate\", \"menuId\", \"tabindex\", \"ariaLabel\", \"ariaLabelledBy\", \"baseZIndex\", \"autoZIndex\", \"autoDisplay\", \"popup\", \"focusedItemId\", \"activeItemPath\", \"itemClick\", \"menuFocus\", \"menuBlur\", \"menuKeydown\", \"itemMouseEnter\"], [\"rootmenu\", \"\"]],\n      template: function TieredMenu_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, TieredMenu_div_0_Template, 4, 29, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngIf\", !ctx.popup || ctx.visible);\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgIf, i1.NgStyle, TieredMenuSub],\n      styles: [\"@layer primeng{.p-tieredmenu-overlay{position:absolute;top:0;left:0}.p-tieredmenu ul{margin:0;padding:0;list-style:none}.p-tieredmenu .p-submenu-list{position:absolute;min-width:100%;z-index:1;display:none}.p-tieredmenu .p-menuitem-link{cursor:pointer;display:flex;align-items:center;text-decoration:none;overflow:hidden;position:relative}.p-tieredmenu .p-menuitem-text{line-height:1}.p-tieredmenu .p-menuitem{position:relative}.p-tieredmenu .p-menuitem-link .p-submenu-icon:not(svg){margin-left:auto}.p-tieredmenu .p-menuitem-link .p-icon-wrapper{margin-left:auto}.p-tieredmenu .p-menuitem-active>p-tieredmenusub>.p-submenu-list{display:block;left:100%;top:0}.p-tieredmenu .p-menuitem-active>p-tieredmenusub>.p-submenu-list.p-submenu-list-flipped{left:-100%}}\\n\"],\n      encapsulation: 2,\n      data: {\n        animation: [trigger('overlayAnimation', [transition(':enter', [style({\n          opacity: 0,\n          transform: 'scaleY(0.8)'\n        }), animate('{{showTransitionParams}}')]), transition(':leave', [animate('{{hideTransitionParams}}', style({\n          opacity: 0\n        }))])])]\n      },\n      changeDetection: 0\n    });\n  }\n  return TieredMenu;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TieredMenuModule = /*#__PURE__*/(() => {\n  class TieredMenuModule {\n    static ɵfac = function TieredMenuModule_Factory(t) {\n      return new (t || TieredMenuModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TieredMenuModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, RouterModule, RippleModule, TooltipModule, AngleRightIcon, SharedModule, RouterModule, TooltipModule, SharedModule]\n    });\n  }\n  return TieredMenuModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TieredMenu, TieredMenuModule, TieredMenuSub };\n//# sourceMappingURL=primeng-tieredmenu.mjs.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}